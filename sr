#!/bin/bash

HOST_URL='http://localhost:8080'
: ${DIRECTORY_PATH:=~/.sr}
JWT_FILE_PATH=/jwt.txt
SCRIPTS_PATH=/scripts
TOOLS_PATH=/tools

function authenticate() {
	JWT_TOKEN=$(curl -s -X POST ${HOST_URL}/api/authenticate -H "Content-Type: application/json" -d "{\"username\":\"$1\",\"password\":\"$2\",\"rememberMe\":\"true\"}" | grep '"id_token"' | cut -d '"' -f4)
}

function login() {
	read -p 'Username:' USERNAME
	read -sp 'Password:' PASSWORD
	echo ""
	authenticate "$USERNAME" "$PASSWORD"
	if [[ -z "$JWT_TOKEN" ]]; then
		echo "Bad username or password"
	else
		save_jwt
	fi
}

function try_read_jwt_token() {
	if [[ -f "${DIRECTORY_PATH}${JWT_FILE_PATH}" ]]; then
		JWT_TOKEN="$(cat "${DIRECTORY_PATH}${JWT_FILE_PATH}")"
		test_jwt
		if [[ -z "$RESULT" ]]; then
			JWT_TOKEN=""
		fi
	fi
}

function test_jwt() {
	RESULT=$(curl -s -I "${HOST_URL}/api/account" -H "Authorization: Bearer ${JWT_TOKEN}" | head -n 1 | grep 200)
}

function save_jwt() {
	echo "$JWT_TOKEN" > "${DIRECTORY_PATH}${JWT_FILE_PATH}"
}

function create_directory_if_needed() {
	if [[ ! -d "${DIRECTORY_PATH}${SCRIPTS_PATH}" ]]; then
		mkdir -p "${DIRECTORY_PATH}${SCRIPTS_PATH}"
	fi
	if [[ ! -d "${DIRECTORY_PATH}${TOOLS_PATH}" ]]; then
		mkdir -p "${DIRECTORY_PATH}${TOOLS_PATH}"
	fi
}

function get_header_if_logged() {
	if [[ -z "$JWT_TOKEN" ]]; then
		HEADER=""
	else
		HEADER="-H \"Authorization: Bearer $JWT_TOKEN\""
	fi
}

function download_script() {
	RESULT=0
	get_header_if_logged
	TEMP="$(mktemp)"
	curl -s "${HOST_URL}/api/repository/code/$1/$2/$3" $HEADER > "$TEMP"
	case "$(head -n 1 $TEMP)" in
		"ok")
			case "$(sed '2q;d' $TEMP)" in
				"BASH") ;;
				"GROOVY") install_groovy_if_needed;;
				*) 
				   echo "Script language is not recognized"
				   return
				   ;;
			esac
			cat "$TEMP" | tail -n +3 > "${DIRECTORY_PATH}${SCRIPTS_PATH}/$1-$2-$3"
			chmod +x "${DIRECTORY_PATH}${SCRIPTS_PATH}/$1-$2-$3"
			sha512sum "${DIRECTORY_PATH}${SCRIPTS_PATH}/$1-$2-$3" > "${DIRECTORY_PATH}${SCRIPTS_PATH}/$1-$2-$3.CHECKSUM"
			cat "$TEMP" | sed '2q;d' > "${DIRECTORY_PATH}${SCRIPTS_PATH}/$1-$2-$3.lang"
			rm "$TEMP"
			RESULT=1
							;;
		"no found") echo "Script not found";;
		"no access") echo "You have no access to this script";;
	esac
}

function download_and_run_script() {
	if [[ -f "${DIRECTORY_PATH}${SCRIPTS_PATH}/$1-$2-$3" ]]; then
		if [[ "$(sha512sum -c "${DIRECTORY_PATH}${SCRIPTS_PATH}/$1-$2-$3.CHECKSUM" 2> /dev/null | cut -d ' ' -f2)" == "OK" ]]; then
			run_script "$1" "$2" "$3"
		else
			echo "Script was changed"
		fi
	else
		download_script "$1" "$2" "$3"
		if [[ "$RESULT" == 1 ]]; then
			run_script "$1" "$2" "$3"
		fi
	fi
}

function run_script() {
	case "$(cat "${DIRECTORY_PATH}${SCRIPTS_PATH}/$1-$2-$3.lang")" in
		"BASH") bash "${DIRECTORY_PATH}${SCRIPTS_PATH}/$1-$2-$3";;
		"GROOVY") JAVA_HOME="${DIRECTORY_PATH}${TOOLS_PATH}/java" GROOVY_HOME="${DIRECTORY_PATH}${TOOLS_PATH}/groovy" "${DIRECTORY_PATH}${TOOLS_PATH}/groovy/bin/groovy" "${DIRECTORY_PATH}${SCRIPTS_PATH}/$1-$2-$3";;
		*) echo "Script language is not recognized";;
	esac
}

function install_groovy_if_needed() {
	install_java_if_needed
	if [[ ! -d "${DIRECTORY_PATH}${TOOLS_PATH}/groovy" ]]; then
		GROOVY_ZIP="$(mktemp)"
		wget -q "https://dl.bintray.com/groovy/maven/apache-groovy-binary-2.4.14.zip" -O "$GROOVY_ZIP"
		unzip -q "$GROOVY_ZIP" -d "${DIRECTORY_PATH}${TOOLS_PATH}"
		mv "${DIRECTORY_PATH}${TOOLS_PATH}/groovy-2.4.14" "${DIRECTORY_PATH}${TOOLS_PATH}/groovy"
		rm "$GROOVY_ZIP"
	fi
}

function install_java_if_needed() {
	if [[ ! -d "${DIRECTORY_PATH}${TOOLS_PATH}/java" ]]; then
		JAVA_ZIP=$(mktemp)
		wget -q --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/8u162-b12/0da788060d494f5095bf8624735fa2f1/jre-8u162-linux-x64.tar.gz -O "$JAVA_ZIP"
		tar -xf "$JAVA_ZIP" -C "${DIRECTORY_PATH}${TOOLS_PATH}"
		mv "${DIRECTORY_PATH}${TOOLS_PATH}/jre1.8.0_162" "${DIRECTORY_PATH}${TOOLS_PATH}/java"
		rm "$JAVA_ZIP"
	fi
}

create_directory_if_needed
#try_read_jwt_token
#if [[ -z "$JWT_TOKEN" ]]; then
#	login
#fi
#
#run_script user MyCollection a

download_and_run_script "$1" "$2" "$3"
