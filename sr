#!/bin/bash

HOST_URL='http://localhost:8080'
: ${DIRECTORY_PATH:=~/.sr}
JWT_FILE_PATH=/jwt.txt
SCRIPTS_PATH=/scripts

function authenticate() {
	JWT_TOKEN=$(curl -s -X POST ${HOST_URL}/api/authenticate -H "Content-Type: application/json" -d "{\"username\":\"$1\",\"password\":\"$2\",\"rememberMe\":\"true\"}" | grep '"id_token"' | cut -d '"' -f4)
}

function login() {
	read -p 'Username:' USERNAME
	read -sp 'Password:' PASSWORD
	echo ""
	authenticate "$USERNAME" "$PASSWORD"
	if [[ -z "$JWT_TOKEN" ]]; then
		echo "Bad username or password"
	else
		save_jwt
	fi
}

function try_read_jwt_token() {
	if [[ -f "${DIRECTORY_PATH}${JWT_FILE_PATH}" ]]; then
		JWT_TOKEN="$(cat "${DIRECTORY_PATH}${JWT_FILE_PATH}")"
		test_jwt
		if [[ -z "$RESULT" ]]; then
			JWT_TOKEN=""
		fi
	fi
}

function test_jwt() {
	RESULT=$(curl -s -I "${HOST_URL}/api/account" -H "Authorization: Bearer ${JWT_TOKEN}" | head -n 1 | grep 200)
}

function save_jwt() {
	echo "$JWT_TOKEN" > "${DIRECTORY_PATH}${JWT_FILE_PATH}"
}

function create_script_directory_if_needed() {
	if [[ ! -d "${DIRECTORY_PATH}${SCRIPTS_PATH}" ]]; then
		mkdir -p "${DIRECTORY_PATH}${SCRIPTS_PATH}"
	fi
}

function download_script() {
	RESULT="$(curl -s -I "${HOST_URL}/api/repository/code/$1/$2/$3" -H "Authorization: Bearer ${JWT_TOKEN}" | head -n 1 | grep 200)"
	if [[ ! -z "$RESULT" ]]; then
		curl -s "${HOST_URL}/api/repository/code/$1/$2/$3" > "${DIRECTORY_PATH}${SCRIPTS_PATH}/$1-$2-$3"
		curl -s "${HOST_URL}/api/repository/code/$1/$2/$3" -H "Authorization: Bearer ${JWT_TOKEN}" > "${DIRECTORY_PATH}${SCRIPTS_PATH}/$1-$2-$3"
		chmod +x "${DIRECTORY_PATH}${SCRIPTS_PATH}/$1-$2-$3"
		sha512sum "${DIRECTORY_PATH}${SCRIPTS_PATH}/$1-$2-$3" > "${DIRECTORY_PATH}${SCRIPTS_PATH}/$1-$2-$3.CHECKSUM"
	else
		echo "Failed to download a script"
	fi
}

function run_script() {
	if [[ -f "${DIRECTORY_PATH}${SCRIPTS_PATH}/$1-$2-$3" ]]; then
		if [[ "$(sha512sum -c "${DIRECTORY_PATH}${SCRIPTS_PATH}/$1-$2-$3.CHECKSUM" 2> /dev/null | cut -d ' ' -f2)" == "OK" ]]; then
			"${DIRECTORY_PATH}${SCRIPTS_PATH}/$1-$2-$3"
		else
			echo "Script was changed"
		fi
	else
		download_script "$1" "$2" "$3"
		if [[ ! -z "$RESULT" ]]; then
			"${DIRECTORY_PATH}${SCRIPTS_PATH}/$1-$2-$3"
		fi
	fi
}

create_script_directory_if_needed
try_read_jwt_token
if [[ -z "$JWT_TOKEN" ]]; then
	login
fi

run_script

